{"version":3,"file":"static/js/764.c644970d.chunk.js","mappings":"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","sources":["components/NAV_SWITCH/NSwitch.tsx","components/MobileNavbar/index.tsx","components/NAVBAR/Navbar.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport \"./this.css\";\r\nimport { Link } from \"react-scroll\";\r\n// import { Link } from \"react-router-dom\"\r\n\r\ninterface NSwitchProps {\r\n  name: string, id: string, path: string, active: Boolean, isActive: Boolean\r\n}\r\n\r\nconst NSwitch: React.FC<NSwitchProps> = ({ path, name, isActive }) => {\r\n\r\n  return (\r\n    <Link\r\n      to={path}\r\n      spy={true}\r\n      offset={-100}\r\n      smooth={true}\r\n      duration={500} >\r\n      <Flex\r\n        className=\"switch\"\r\n        fontSize={{ base: \"10px\", sm: \"15px\" }}\r\n        padding={{ base: \"5px\", sm: \"10px\" }}\r\n        ml={{ base: \"3px\", md: \"3px\", lg: \"10px\" }}\r\n        sx={{\r\n          transform: isActive && \"scale(1.1)\",\r\n          transistion: isActive && \"5s\",\r\n          cursur: \"pointer\"\r\n        }}\r\n      >\r\n        {name}\r\n      </Flex>\r\n    </Link >\r\n  );\r\n};\r\n\r\nexport default NSwitch;\r\n","import { Box, Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerOverlay, useDisclosure } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport NSwitch from '../NAV_SWITCH/NSwitch'\r\nimport { pathNavigation } from '../../portfolio'\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\"\r\n\r\nconst MobileNavbar: React.FC = () => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box onClick={onOpen}>\r\n\r\n                <HamburgerIcon />\r\n            </Box>\r\n\r\n\r\n            <Drawer placement={'top'} onClose={onClose} isOpen={isOpen}>\r\n                <DrawerOverlay />\r\n                <DrawerContent sx={{\r\n                    paddingX: \"30px\",\r\n                    paddingTop: \"50px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"flex-start\"\r\n                }}\r\n\r\n                >\r\n                    <DrawerBody>\r\n                        {pathNavigation.map((item) => {\r\n                            console.log(\"item.path\", item.path);\r\n                            return (\r\n                                item.active && (\r\n                                    <NSwitch\r\n                                        // isActive={location.pathname === item.path}\r\n                                        isActive={true}\r\n                                        active={item.active}\r\n                                        path={item.path}\r\n                                        key={item.id}\r\n                                        name={item.name}\r\n                                        id={item.id}\r\n                                    />\r\n                                )\r\n                            );\r\n                        })}\r\n\r\n\r\n                    </DrawerBody>\r\n                    <DrawerFooter sx={{ display: \"flex\", alignItem: \"flex-start\" }}>\r\n                        <Button\r\n                            sx={{\r\n                                target: \"_blank\"\r\n                            }}\r\n                            bg={\"thistheme.text\"}\r\n                            color={\"white\"}\r\n                            _hover={{\r\n                                border: \"1px \",\r\n                                bg: \"thistheme.background\",\r\n                                borderColor: \"thistheme.text\",\r\n                                color: \"thistheme.text\",\r\n                            }}\r\n                            size={\"md\"}\r\n                        >\r\n                            <a target={\"_blank\"} rel=\"noreferrer\" href=\"https://drive.google.com/drive/folders/1rGK1__xP1vzQ3XaB5UgLDvkNKKxYYGiS?usp=sharing\">\r\n                                See my resume\r\n                            </a>\r\n                        </Button>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MobileNavbar","\r\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./navbar.css\";\r\nimport NSwitch from \"../NAV_SWITCH/NSwitch\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n// import { Fade } from \"react-reveal\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { pathNavigation } from \"../../portfolio\";\r\nimport { Link } from \"react-scroll\";\r\nimport MobileNavbar from \"../MobileNavbar\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  // const navigate = useNavigate();\r\n  // const location = useLocation();\r\n  // if(location.pathname === \"/\") return <></> for future porpose \r\n  const [isMobileScreen] = useMediaQuery('(max-width: 444px)')\r\n\r\n\r\n  return (\r\n    <Flex\r\n      m={\"auto\"}\r\n      // mt={\"20px\"}\r\n      w={{\r\n        base: \"90%\",\r\n        sm: \"90%\",\r\n        md: \"800px\",\r\n        lg: \"900px\",\r\n        xl: \"1100px\",\r\n        \"2xl\": \"1400px\",\r\n      }}\r\n      borderColor=\"black\"\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <Flex\r\n        display={\"flex\"}\r\n        justifyContent={{\r\n          base: \"flex-start\",\r\n          md: \"center\"\r\n        }}\r\n        alignItems={\"center\"}\r\n        color=\"thistheme.text\"\r\n        w={\"fit-content\"}\r\n        cursor={\"pointer\"}\r\n      >\r\n        <Box fontSize={{ base: \"13px\", sm: \"25px\" }}\r\n        // className=\"entity\"\r\n        >\r\n          &lt;{\" \"}\r\n        </Box>\r\n        <Box\r\n          // onClick={() => {\r\n          //   navigate(\"/\");\r\n          // }}\r\n          fontSize={{ base: \"13px\", sm: \"54px\" }}\r\n          className=\"mercy\"\r\n        >\r\n          <Link to=\"/home\" spy={true}\r\n            smooth={true}\r\n            duration={500} >\r\n            {/* Codding / */}\r\n            {\" \"}  Code First\r\n            {\" \"}\r\n            {/* <Image src={\"./images/codingIsLife.png\"} /> */}\r\n          </Link>\r\n        </Box>\r\n\r\n        <Box fontSize={{ base: \"13px\", sm: \"25px\" }}\r\n        // className=\"entity\"\r\n        >\r\n          {\" \"}/&gt;\r\n        </Box>\r\n      </Flex>\r\n\r\n      {\r\n        isMobileScreen ? <MobileNavbar /> :\r\n          <Flex alignItems={\"center\"} justifyContent={\"flex-end\"} w={\"70%\"}>\r\n\r\n            {pathNavigation.map((item) => {\r\n              console.log(\"item.path\", item.path);\r\n              return (\r\n                item.active && (\r\n                  <NSwitch\r\n                    // isActive={location.pathname === item.path}\r\n                    isActive={true}\r\n                    active={item.active}\r\n                    path={item.path}\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    id={item.id}\r\n                  />\r\n                )\r\n              );\r\n            })}\r\n               <Button\r\n            sx={{\r\n              target: \"_blank\"\r\n            }}\r\n            bg={\"thistheme.text\"}\r\n            color={\"white\"}\r\n            _hover={{\r\n              border: \"1px \",\r\n              bg: \"thistheme.background\",\r\n              borderColor: \"thistheme.text\",\r\n              color: \"thistheme.text\",\r\n            }}\r\n            size={\"md\"}\r\n            onClick={() => {\r\n              window.open(\"https://drive.google.com/file/d/1-1NB6z-L2vV_H3aDyNBGOD_tO0cJSck_/view?usp=drive_link\", \"_blank\");\r\n              setTimeout(() => {\r\n                  window.location.href = \"https://drive.google.com/uc?export=download&id=1-1NB6z-L2vV_H3aDyNBGOD_tO0cJSck_\";\r\n              }, 500); \r\n          }}\r\n          >\r\n \r\n            See Resume\r\n          </Button>\r\n          </Flex>\r\n      }\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["_ref","path","name","isActive","_jsx","Link","to","spy","offset","smooth","duration","children","Flex","className","fontSize","base","sm","padding","ml","md","lg","sx","transform","transistion","cursur","MobileNavbar","isOpen","onOpen","onClose","useDisclosure","_jsxs","_Fragment","Box","onClick","HamburgerIcon","Drawer","placement","DrawerOverlay","DrawerContent","paddingX","paddingTop","display","flexDirection","alignItems","DrawerBody","pathNavigation","map","item","console","log","active","NSwitch","id","DrawerFooter","alignItem","Button","target","bg","color","_hover","border","borderColor","size","rel","href","Navbar","isMobileScreen","useMediaQuery","m","w","xl","justifyContent","cursor","window","open","setTimeout","location"],"sourceRoot":""}