{"version":3,"file":"static/js/731.f6df0597.chunk.js","mappings":"mMAUA,MA0BA,EA1BwCA,IAA+B,IAA9B,KAAEC,EAAI,KAAEC,EAAI,SAAEC,GAAUH,EAE/D,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAIL,EACJM,KAAK,EACLC,QAAS,IACTC,QAAQ,EACRC,SAAU,IAAIC,UACdP,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CACHC,UAAU,SACVC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BC,QAAS,CAAEF,KAAM,MAAOC,GAAI,QAC5BE,GAAI,CAAEH,KAAM,MAAOI,GAAI,MAAOC,GAAI,QAClCC,GAAI,CACFC,UAAWnB,GAAY,aACvBoB,YAAapB,GAAY,KACzBqB,OAAQ,WACRb,SAEDT,KAEG,E,cCtBZ,MAmFA,EAnFyBuB,KAKrBC,EAAAA,EAAAA,MAACd,EAAAA,EAAI,CACHe,EAAG,OAEHC,EAAG,CACDb,KAAM,MACNC,GAAI,MACJG,GAAI,QACJC,GAAI,QACJS,GAAI,SACJ,MAAO,UAETC,YAAY,QACZC,eAAgB,gBAAgBpB,SAAA,EAEhCe,EAAAA,EAAAA,MAACd,EAAAA,EAAI,CACHoB,QAAS,OACTD,eAAgB,CACdhB,KAAM,aACNI,GAAI,UAENc,WAAY,SACZC,MAAM,iBACNN,EAAG,cACHO,OAAQ,UAAUxB,SAAA,EAElBe,EAAAA,EAAAA,MAACU,EAAAA,GAAG,CAACtB,SAAU,CAAEC,KAAM,OAAQC,GAAI,QACnCL,SAAA,CACC,IACM,QAEPP,EAAAA,EAAAA,KAACgC,EAAAA,GAGC,CACAtB,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BH,UAAU,QAAOF,UAEjBe,EAAAA,EAAAA,MAACrB,EAAAA,GAAI,CAACC,GAAG,QAAQC,KAAK,EACpBE,QAAQ,EACRC,SAAU,IAAIC,SAAA,CAEb,IAAI,eACJ,UAKLe,EAAAA,EAAAA,MAACU,EAAAA,GAAG,CAACtB,SAAU,CAAEC,KAAM,OAAQC,GAAI,QACnCL,SAAA,CAEG,IAAI,YAKTP,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACqB,WAAY,SAAUF,eAAgB,WAAYH,EAAG,MAAMjB,SAE9D0B,EAAAA,GAAeC,KAAKC,IACnBC,QAAQC,IAAI,YAAaF,EAAKtC,MAE5BsC,EAAKG,SACHtC,EAAAA,EAAAA,KAACuC,EACC,CACAxC,UAAU,EACVuC,OAAQH,EAAKG,OACbzC,KAAMsC,EAAKtC,KAEXC,KAAMqC,EAAKrC,KACX0C,GAAIL,EAAKK,IAFJL,EAAKK,W,mECnBbhC,GAAOiC,EAAAA,EAAAA,IAA6B,SAAcC,EAAOC,GACpE,MAAM,UAAEC,EAAA,MAAWC,EAAA,QAAOC,EAAA,KAASC,EAAA,MAAMC,EAAA,KAAOC,EAAA,OAAMC,KAAWC,GAC/DT,EAEIU,EAAS,CACbxB,QAAS,OACTyB,cAAeT,EACff,WAAYgB,EACZlB,eAAgBmB,EAChBQ,SAAUP,EACVQ,UAAWP,EACXQ,SAAUP,EACVQ,WAAYP,GAGd,OAAOQ,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAP,CAAWjB,MAAUkB,MAAOT,KAAYD,GAClD,IAEA3C,EAAKsD,YAAc,M","sources":["components/NAV_SWITCH/NSwitch.tsx","components/NAVBAR/Navbar.tsx","../node_modules/@chakra-ui/layout/src/flex.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport \"./this.css\";\r\nimport { Link } from \"react-scroll\";\r\n// import { Link } from \"react-router-dom\"\r\n\r\ninterface NSwitchProps {\r\n  name: string, id: string, path: string, active: Boolean, isActive: Boolean\r\n}\r\n\r\nconst NSwitch: React.FC<NSwitchProps> = ({ path, name, isActive }) => {\r\n\r\n  return (\r\n    <Link\r\n      to={path}\r\n      spy={true}\r\n      offset={-100}\r\n      smooth={true}\r\n      duration={500} >\r\n      <Flex\r\n        className=\"switch\"\r\n        fontSize={{ base: \"10px\", sm: \"15px\" }}\r\n        padding={{ base: \"5px\", sm: \"10px\" }}\r\n        ml={{ base: \"3px\", md: \"3px\", lg: \"10px\" }}\r\n        sx={{\r\n          transform: isActive && \"scale(1.1)\",\r\n          transistion: isActive && \"5s\",\r\n          cursur: \"pointer\"\r\n        }}\r\n      >\r\n        {name}\r\n      </Flex>\r\n    </Link >\r\n  );\r\n};\r\n\r\nexport default NSwitch;\r\n","\r\nimport { Box, Flex } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./navbar.css\";\r\nimport NSwitch from \"../NAV_SWITCH/NSwitch\";\r\n// import { Fade } from \"react-reveal\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { pathNavigation } from \"../../portfolio\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  // const navigate = useNavigate();\r\n  // const location = useLocation();\r\n  // if(location.pathname === \"/\") return <></> for future porpose \r\n  return (\r\n    <Flex\r\n      m={\"auto\"}\r\n      // mt={\"20px\"}\r\n      w={{\r\n        base: \"90%\",\r\n        sm: \"90%\",\r\n        md: \"800px\",\r\n        lg: \"900px\",\r\n        xl: \"1100px\",\r\n        \"2xl\": \"1400px\",\r\n      }}\r\n      borderColor=\"black\"\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <Flex\r\n        display={\"flex\"}\r\n        justifyContent={{\r\n          base: \"flex-start\",\r\n          md: \"center\"\r\n        }}\r\n        alignItems={\"center\"}\r\n        color=\"thistheme.text\"\r\n        w={\"fit-content\"}\r\n        cursor={\"pointer\"}\r\n      >\r\n        <Box fontSize={{ base: \"13px\", sm: \"25px\" }}\r\n        // className=\"entity\"\r\n        >\r\n          &lt;{\" \"}\r\n        </Box>\r\n        <Box\r\n          // onClick={() => {\r\n          //   navigate(\"/\");\r\n          // }}\r\n          fontSize={{ base: \"13px\", sm: \"54px\" }}\r\n          className=\"mercy\"\r\n        >\r\n          <Link to=\"/home\" spy={true}\r\n            smooth={true}\r\n            duration={500} >\r\n            {/* Codding / */}\r\n            {\" \"}  Code First\r\n            {\" \"}\r\n            {/* <Image src={\"./images/codingIsLife.png\"} /> */}\r\n          </Link>\r\n        </Box>\r\n\r\n        <Box fontSize={{ base: \"13px\", sm: \"25px\" }}\r\n        // className=\"entity\"\r\n        >\r\n          {\" \"}/&gt;\r\n        </Box>\r\n      </Flex>\r\n\r\n\r\n      <Flex alignItems={\"center\"} justifyContent={\"flex-end\"} w={\"70%\"}>\r\n\r\n        {pathNavigation.map((item) => {\r\n          console.log(\"item.path\", item.path);\r\n          return (\r\n            item.active && (\r\n              <NSwitch\r\n                // isActive={location.pathname === item.path}\r\n                isActive={true}\r\n                active={item.active}\r\n                path={item.path}\r\n                key={item.id}\r\n                name={item.name}\r\n                id={item.id}\r\n              />\r\n            )\r\n          );\r\n        })}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"],"names":["_ref","path","name","isActive","_jsx","Link","to","spy","offset","smooth","duration","children","Flex","className","fontSize","base","sm","padding","ml","md","lg","sx","transform","transistion","cursur","Navbar","_jsxs","m","w","xl","borderColor","justifyContent","display","alignItems","color","cursor","Box","pathNavigation","map","item","console","log","active","NSwitch","id","forwardRef","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","flexDirection","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","div","__css","displayName"],"sourceRoot":""}